[tox]
requires =
  tox>=4
isolated_build = true
env_list = lint, py312

[testenv]
skip_install = true
description = run unit tests
allowlist_externals =
  poetry
  docker
commands_pre =
  poetry install --no-root
passenv = *


[testenv:lint]
description = run linters
skip_install = true
commands =
  poetry run black {posargs:.}
  poetry run isort {posargs:.}
  poetry run flake8 {posargs:.}

[testenv:start]
description = run local backend
skip_install = true
setenv =
  ENVIRONMENT=DEV
commands =
  docker compose -f docker-compose-dev.yml up --build -d
  poetry run trash_manager/manage.py runserver 0.0.0.0:8000
commands_post =
  docker compose -f docker-compose-dev.yml down

[testenv:makemigrations]
description = make migrations
skip_install = true
commands =
  poetry run trash_manager/manage.py makemigrations

[testenv:migrate]
description = apply migration to dev database
skip_install = true
commands =
  docker compose -f docker-compose-dev.yml up --build -d
  poetry run trash_manager/manage.py migrate
commands_post =
  docker compose -f docker-compose-dev.yml down
